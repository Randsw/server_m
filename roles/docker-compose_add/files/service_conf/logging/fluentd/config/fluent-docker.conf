<filter docker.var.lib.docker.containers.*.*.log>
  @type docker_metadata
  labels com.docker.stack.namespace:namespace,com.docker.swarm.service.name:service_name,com.docker.swarm.node.id:node_id
</filter>

<match docker.var.lib.docker.containers.*.*.log>
  @type rewrite_tag_filter
  <rule>
    key container_name
    pattern ^(.+)front(.+)$
    tag front.dlog
  </rule>
  <rule>
    key container_name
    pattern ^(.*)(fluent)(.*)$
    tag ignore.dlog.$1
  </rule>
  <rule>
    key container_name
    pattern ^(.+)$
    tag $1
  </rule>
</match>

<filter front.**>
  @type parser
  key_name log
  format nginx
  # Retain the original "log" field after parsing out the data.
  reserve_data true
  # The access logs and error logs are interleaved with each other and have
  # different formats, so ignore parse errors, as they're expected
  suppress_parse_error_log true
  tag nginx_proxy
</filter>

<match ignore.**>
  @type null
</match>

# <filter system.**>
#   @type grep
#   <regexp>
#     key ident
#     pattern /^sudo$/
#   </regexp>
#   <regexp>
#     key message
#     pattern /COMMAND/
#   </regexp>
# </filter>

# <filter system.**>
#   @type parser
#   key_name message
#   format json
#   <parse>
#     @type regexp
#     expression /USER=(?<sudoer>[^ ]+) ; COMMAND=(?<command>.*)$/
#   </parse>
# </filter>

# <filter system.**>
#   @type record_transformer
#   enable_ruby
#   <record>
#     hostname "#{Socket.gethostname}"
#   </record>
# </filter>

<match system.**>
  @type relabel
  @label @SYSTEM_INFO
</match>

<match **>
  @type relabel
  @label @LOGS_PARSED
</match>